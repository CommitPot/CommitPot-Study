#include <iostream>

using namespace std;

int dp[1000001], vis[1000001];
const int a[] = {777777, 777774, 777747, 777744, 777477, 777474, 777447, 777444, 774777, 774774, 774747, 774744,
                 774477,
                 774474, 774447, 774444, 747777, 747774, 747747, 747744, 747477, 747474, 747447, 747444, 744777,
                 744774,
                 744747, 744744, 744477, 744474, 744447, 744444, 477777, 477774, 477747, 477744, 477477, 477474,
                 477447,
                 477444, 474777, 474774, 474747, 474744, 474477, 474474, 474447, 474444, 447777, 447774, 447747,
                 447744,
                 447477, 447474, 447447, 447444, 444777, 444774, 444747, 444744, 444477, 444474, 444447, 444444,
                 77777,
                 77774,
                 77747, 77744, 77477, 77474, 77447, 77444, 74777, 74774, 74747, 74744, 74477, 74474, 74447, 74444,
                 47777,
                 47774, 47747, 47744, 47477, 47474, 47447, 47444, 44777, 44774, 44747, 44744, 44477, 44474, 44447,
                 44444,
                 7777, 7774, 7747, 7744, 7477, 7474, 7447, 7444, 4777, 4774, 4747, 4744, 4477, 4474, 4447, 4444,
                 777,
                 774,
                 747, 744, 477, 474, 447, 444, 77, 74, 47, 44, 7, 4};

int f(int c) {
    if (!c) return dp[0] = 0;
    if (dp[c]) return dp[c];
    dp[c] = 1e9;
    for (int i: a) {
        if (c < i) continue;
        int x = f(c - i) + 1;
        if (dp[c] >= x) {
            vis[c] = c - i;
            dp[c] = x;
        }
    }
    return dp[c];
}

int main() {
    ios::sync_with_stdio(false), cin.tie(nullptr), cout.tie(nullptr);
    int n;
    cin >> n;
    int x = f(n);
    if (x == 1e9 || !n) {
        cout << -1;
        return 0;
    }
    while (n) {
        cout << n - vis[n] << " ";
        n = vis[n];
    }
}
